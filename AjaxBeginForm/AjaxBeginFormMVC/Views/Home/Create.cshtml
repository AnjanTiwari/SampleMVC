@model AjaxBeginFormMVC.Models.Table

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div id="LoaderImage" style="display:none"><!--we are keeping it none so it will not appear fisrt time-->
    <img src="~/Images/Loader.gif" height="100" width="100" />

</div>

<div id="DivUpdate">

</div>

@using (Ajax.BeginForm("Create", "Home",
    new AjaxOptions()
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "DivUpdate",
        LoadingElementId="LoaderImage", //this will display that image while processing
        LoadingElementDuration=1000,//this will show the loading image with fading animation and fadeout
        Confirm ="Are you sure you want to insert? ",//for popup
        OnComplete="ClearFields" //this will do work of modelstate.clear() but using javascript method 
        //using ID defined in each text box  and a method defined before scripts



    }
    ))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" ,id="nametxt"} })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" , id = "desigtxt" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", id = "agetxt" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" , id = "salarytxt" } })
                @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Insert" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    function ClearFields() {

        document.getElementById('nametxt').value = "";
        document.getElementById('agetxt').value = "";
        document.getElementById('desigtxt').value = "";

        document.getElementById('salarytxt').value = "";

    }
</script>

<script src="~/Scripts/jquery-1.9.0.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>